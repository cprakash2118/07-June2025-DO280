#- Quick Recap:-
Unit-3-# Authentication & Authorization
  - Authentication - via IdP (Identity Providers - htpasswd, LDAP, OIDC, Git Enterprise, PIngIdentity etc)
  - Authorization  - Privillege via RBAC (Role Based Access COntrol)

Configure Identity Providers:-
 - OpenShift Users and Groups
   Users  - Authentication via Oauth service using token
   Groups - List of users part of specific groups, to manage the operations.
   Identity - IdP:user
   ServiceAccount - User account used by application/API to get the Privillege.
   Role - Set of rules (rule is like action)
   
   oc get users/groups/identity [It saved enties on ETCD cluster - key/value]
   
Authenticating API Requests:-
 - Token Based [OAuth access tokens - inbuild feature of Oauth service]
 - Certificate Based [ X.509 client certificates ]
 
Identity Providers:-
1-) HTpasswd
2-) LDAP (rhds), IDM, Active Directory
3-) Open ID Connect (OIDC) - RHSSO, PIngIdentity etc 
4-) Git Enterprise
5-) KeyStone 

############################################

Task-01:-
user1-5/passwd ; secret=sre-secret ; file-upload=htpasswd-sre ; IdP=htpasswd-sre-do280
user6-10/passwd ; secret=devops-secret ; file-upload=htpasswd-devops ; IdP=htpasswd-devops-do280
user11-20/passwd ; secret=app01-secret ; file-upload=htpasswd-app01 ; IdP=htpasswd-app01-do280

Task-02:- Groups
grp_sre = user1-5 
grp_devops = user6-10 
grp_app01 = user11-20 


Task-03:- RBAC
grp_sre - cluster-admin 
grp_devops - self-provisioner 
grp_devops - user11/12 - admin ; user13-18 - edit ; user19-20 - view - w.r.t namespace=ns-app01 

namespace=project
oc new-project namespace.



Solution#Task-01:-
$ oc login -u admin -p redhatocp https://api.ocp4.example.com:6443 
$ co whoami 
$ oc whoami --show-console 
$ oc version 

Step-1:- Create user's details (username/Password via htpasswd).
$ htpasswd -c -B -b htpasswd-sre user1 passwd 
$ htpasswd    -B -b htpasswd-sre user2 passwd 
$ htpasswd    -B -b htpasswd-sre user3 passwd
$ htpasswd    -B -b htpasswd-sre user4 passwd
$ htpasswd    -B -b htpasswd-sre user5 passwd

$ cat htpasswd-sre

Step-2:- Create Secret 
$ oc create secret generic sre-secret --from-file htpasswd=htpasswd-sre  -n openshift-config 
$ oc get secret -n openshift-config
$ oc get secret sre-secret -n openshift-config
$ oc get secret sre-secret -n openshift-config -o yaml/json (only one at a time).

Step-3:- Update to Oauth service:-
$ oc get oauth cluster 
$ oc get oauth cluster -o yaml > oauth.yaml 
$ vim oauth.yaml 
-------------
-------------
-------------
spec:
  identityProviders:
  - name: Your-Identity-Providers-name 
    mappingMethod: claim 
    type: HTPasswd
    htpasswd:
      fileData:
        name: htpass-secretName-Here 
		

$ oc get pods -n openshift-authetication 
$ oc login -u user1 -p passwd https://api.ocp4.example.com:6443 
$ oc get users 
$ oc get identity 
$ oc get groups





		
		
		




















